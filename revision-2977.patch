Index: exec/objdb.c
===================================================================
--- exec/objdb.c	(revision 2976)
+++ exec/objdb.c	(revision 2977)
@@ -33,11 +33,15 @@
  * THE POSSIBILITY OF SUCH DAMAGE.
  */
 
+#define _XOPEN_SOURCE 600
+
 #include <config.h>
 
 #include <stdio.h>
 #include <errno.h>
 
+#include <pthread.h>
+
 #include <corosync/list.h>
 #include <corosync/hdb.h>
 #include <corosync/lcr/lcr_comp.h>
@@ -97,46 +101,23 @@
 
 struct objdb_iface_ver0 objdb_iface;
 struct list_head objdb_trackers_head;
-static pthread_rwlock_t reload_lock;
-static pthread_t lock_thread;
-static pthread_mutex_t meta_lock;
+static pthread_mutex_t objdb_mutex;
+static pthread_mutexattr_t objdb_mutex_attr;
 
 DECLARE_HDB_DATABASE (object_instance_database,NULL);
 
 DECLARE_HDB_DATABASE (object_find_instance_database,NULL);
 
-static void objdb_wrlock(void)
+static void objdb_lock(void)
 {
-	pthread_mutex_lock(&meta_lock);
-	pthread_rwlock_wrlock(&reload_lock);
-	lock_thread = pthread_self();
-	pthread_mutex_unlock(&meta_lock);
+	pthread_mutex_lock(&objdb_mutex);
 }
 
-static void objdb_rdlock(void)
+static void objdb_unlock(void)
 {
-	pthread_mutex_lock(&meta_lock);
-	if (lock_thread != pthread_self())
-		pthread_rwlock_rdlock(&reload_lock);
-	pthread_mutex_unlock(&meta_lock);
+	pthread_mutex_unlock(&objdb_mutex);
 }
 
-static void objdb_rdunlock(void)
-{
-	pthread_mutex_lock(&meta_lock);
-	if (lock_thread != pthread_self())
-		pthread_rwlock_unlock(&reload_lock);
-	pthread_mutex_unlock(&meta_lock);
-}
-
-static void objdb_wrunlock(void)
-{
-	pthread_mutex_lock(&meta_lock);
-	pthread_rwlock_unlock(&reload_lock);
-	lock_thread = 0;
-	pthread_mutex_unlock(&meta_lock);
-}
-
 static int objdb_init (void)
 {
 	hdb_handle_t handle;
@@ -166,9 +147,12 @@
 	list_init (&instance->child_list);
 	list_init (&instance->track_head);
 	list_init (&objdb_trackers_head);
-	pthread_rwlock_init(&reload_lock, NULL);
-	pthread_mutex_init(&meta_lock, NULL);
 
+	pthread_mutexattr_init(&objdb_mutex_attr);
+
+	pthread_mutexattr_settype(&objdb_mutex_attr, PTHREAD_MUTEX_RECURSIVE);
+	pthread_mutex_init(&objdb_mutex, &objdb_mutex_attr);
+
 	hdb_handle_put (&object_instance_database, handle);
 	return (0);
 
@@ -385,7 +369,7 @@
 	int found = 0;
 	int i;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 		parent_object_handle, (void *)&parent_instance);
 	if (res != 0) {
@@ -458,7 +442,7 @@
 		object_instance->parent_handle,
 		object_instance->object_name,
 		object_instance->object_name_len);
-	objdb_rdunlock();
+	objdb_unlock();
 	return (0);
 
 error_put_destroy:
@@ -471,7 +455,7 @@
 	hdb_handle_put (&object_instance_database, parent_object_handle);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -482,7 +466,7 @@
 	int res;
 	struct object_instance *object_instance;
 
-	objdb_rdlock();
+	objdb_lock();
 
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&object_instance);
@@ -493,11 +477,11 @@
 	object_instance->priv = priv;
 
 	hdb_handle_put (&object_instance_database, object_handle);
-	objdb_rdunlock();
+	objdb_unlock();
 	return (0);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -518,7 +502,7 @@
 	size_t expected_size;
 	int test_size_by_type = CS_TRUE;
 
-	objdb_rdlock();
+	objdb_lock();
 
 	res = hdb_handle_get (&object_instance_database,
 			  object_handle, (void *)&instance);
@@ -638,7 +622,7 @@
 	object_key_changed_notification(object_handle, key_name, key_len,
 		value, value_len, OBJECT_KEY_CREATED);
 	hdb_handle_put (&object_instance_database, object_handle);
-	objdb_rdunlock();
+	objdb_unlock();
 	return (0);
 
 error_put_key:
@@ -651,7 +635,7 @@
 	hdb_handle_put (&object_instance_database, object_handle);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -727,12 +711,12 @@
 	struct object_instance *instance;
 	unsigned int res;
 
-	objdb_rdlock();
+	objdb_lock();
 
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&instance);
 	if (res != 0) {
-		objdb_rdunlock();
+		objdb_unlock();
 		return (res);
 	}
 
@@ -749,7 +733,7 @@
 	hdb_handle_put (&object_instance_database, object_handle);
 	hdb_handle_destroy (&object_instance_database, object_handle);
 
-	objdb_rdunlock();
+	objdb_unlock();
 	return (res);
 }
 
@@ -761,7 +745,7 @@
 	struct object_instance *instance;
 	unsigned int res;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&instance);
 	if (res != 0) {
@@ -773,11 +757,11 @@
 
 	hdb_handle_put (&object_instance_database, object_handle);
 
-	objdb_rdunlock();
+	objdb_unlock();
 	return (0);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -789,7 +773,7 @@
 	struct object_instance *instance;
 	unsigned int res;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&instance);
 	if (res != 0) {
@@ -801,11 +785,11 @@
 
 	hdb_handle_put (&object_instance_database, object_handle);
 
-	objdb_rdunlock();
+	objdb_unlock();
 	return (0);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -822,7 +806,7 @@
 	struct object_instance *object_instance;
 	struct object_find_instance *object_find_instance;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&object_instance);
 	if (res != 0) {
@@ -848,7 +832,7 @@
 	hdb_handle_put (&object_instance_database, object_handle);
 	hdb_handle_put (&object_find_instance_database, *object_find_handle);
 
-	objdb_rdunlock();
+	objdb_unlock();
 	return (0);
 
 error_destroy:
@@ -858,7 +842,7 @@
 	hdb_handle_put (&object_instance_database, object_handle);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -872,7 +856,7 @@
 	struct list_head *list;
 	unsigned int found = 0;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_find_instance_database,
 		object_find_handle, (void *)&object_find_instance);
 	if (res != 0) {
@@ -903,11 +887,11 @@
 		*object_handle = object_instance->object_handle;
 		res = 0;
 	}
-	objdb_rdunlock();
+	objdb_unlock();
 	return (res);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -917,7 +901,7 @@
 	struct object_find_instance *object_find_instance;
 	unsigned int res;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_find_instance_database,
 		object_find_handle, (void *)&object_find_instance);
 	if (res != 0) {
@@ -926,11 +910,11 @@
 	hdb_handle_put(&object_find_instance_database, object_find_handle);
 	hdb_handle_destroy(&object_find_instance_database, object_find_handle);
 
-	objdb_rdunlock();
+	objdb_unlock();
 	return (0);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -948,7 +932,7 @@
 	int found = 0;
 	size_t key_len = strlen(key_name);
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&instance);
 	if (res != 0) {
@@ -977,11 +961,11 @@
 	}
 
 	hdb_handle_put (&object_instance_database, object_handle);
-	objdb_rdunlock();
+	objdb_unlock();
 	return (res);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -1025,7 +1009,7 @@
 	struct list_head *list;
 	int found = 0;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&instance);
 	if (res != 0) {
@@ -1091,11 +1075,11 @@
 		object_key_changed_notification (object_handle, key_name, key_len,
 			object_key->value, object_key->value_len, OBJECT_KEY_REPLACED);
 	}
-	objdb_rdunlock();
+	objdb_unlock();
 	return (res);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -1111,7 +1095,7 @@
 	struct list_head *list;
 	int found = 0;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&instance);
 	if (res != 0) {
@@ -1178,11 +1162,11 @@
 		object_key_changed_notification (object_handle, key_name, key_len,
 			object_key->value, object_key->value_len, OBJECT_KEY_REPLACED);
 	}
-	objdb_rdunlock();
+	objdb_unlock();
 	return (res);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -1198,7 +1182,7 @@
 	struct list_head *list;
 	int found = 0;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&instance);
 	if (res != 0) {
@@ -1231,11 +1215,11 @@
 		object_key_changed_notification(object_handle, key_name, key_len,
 			NULL, 0, OBJECT_KEY_DELETED);
 	}
-	objdb_rdunlock();
+	objdb_unlock();
 	return (ret);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -1254,7 +1238,7 @@
 	int found = 0;
 	int value_changed = 0;
 
-	objdb_rdlock();
+	objdb_lock();
 
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&instance);
@@ -1338,13 +1322,13 @@
 		object_key_changed_notification (object_handle, key_name, key_len,
 			new_value, new_value_len, OBJECT_KEY_REPLACED);
 	}
-	objdb_rdunlock();
+	objdb_unlock();
 	return (ret);
 
 error_put:
 	hdb_handle_put (&object_instance_database, object_handle);
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -1355,7 +1339,7 @@
 	int res;
 	struct object_instance *object_instance;
 
-	objdb_rdunlock();
+	objdb_unlock();
 	res = hdb_handle_get (&object_instance_database,
 		object_handle, (void *)&object_instance);
 	if (res != 0) {
@@ -1365,11 +1349,11 @@
 	*priv = object_instance->priv;
 
 	hdb_handle_put (&object_instance_database, object_handle);
-	objdb_rdunlock();
+	objdb_unlock();
 	return (0);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -1463,7 +1447,7 @@
 	unsigned int res;
 	struct object_instance *instance;
 
-	objdb_rdlock();
+	objdb_lock();
 
 	res = hdb_handle_get (&object_instance_database,
 			      object_handle, (void *)&instance);
@@ -1473,11 +1457,11 @@
 	instance->iter_key_list = &instance->key_head;
 
 	hdb_handle_put (&object_instance_database, object_handle);
-	objdb_rdunlock();
+	objdb_unlock();
 	return (0);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -1493,7 +1477,7 @@
 	struct list_head *list;
 	unsigned int found = 0;
 
-	objdb_rdlock();
+	objdb_lock();
 
 	res = hdb_handle_get (&object_instance_database,
 		parent_object_handle, (void *)&instance);
@@ -1520,11 +1504,11 @@
 	}
 
 	hdb_handle_put (&object_instance_database, parent_object_handle);
-	objdb_rdunlock();
+	objdb_unlock();
 	return (res);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -1560,7 +1544,7 @@
 	struct list_head *list;
 	unsigned int found = 0;
 
-	objdb_rdlock();
+	objdb_lock();
 
 	res = hdb_handle_get (&object_instance_database,
 		parent_object_handle, (void *)&instance);
@@ -1594,11 +1578,11 @@
 	}
 
 	hdb_handle_put (&object_instance_database, parent_object_handle);
-	objdb_rdunlock();
+	objdb_unlock();
 	return (res);
 
 error_exit:
-	objdb_rdunlock();
+	objdb_unlock();
 	return (-1);
 }
 
@@ -1609,12 +1593,12 @@
 	struct object_instance *instance;
 	unsigned int res;
 
-	objdb_rdlock();
+	objdb_lock();
 
 	res = hdb_handle_get (&object_instance_database,
 			      object_handle, (void *)&instance);
 	if (res != 0) {
-		objdb_rdunlock();
+		objdb_unlock();
 		return (res);
 	}
 
@@ -1624,7 +1608,7 @@
 		*parent_handle = instance->parent_handle;
 
 	hdb_handle_put (&object_instance_database, object_handle);
-	objdb_rdunlock();
+	objdb_unlock();
 
 	return (0);
 }
@@ -1636,11 +1620,11 @@
 	struct object_instance *instance;
 	unsigned int res;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 			      object_handle, (void *)&instance);
 	if (res != 0) {
-		objdb_rdunlock();
+		objdb_unlock();
 		return (res);
 	}
 
@@ -1648,7 +1632,7 @@
 	*object_name_len = instance->object_name_len;
 
 	hdb_handle_put (&object_instance_database, object_handle);
-	objdb_rdunlock();
+	objdb_unlock();
 
 	return (0);
 }
@@ -1747,11 +1731,11 @@
 	struct object_instance *instance;
 	unsigned int res;
 
-	objdb_rdlock();
+	objdb_lock();
 	res = hdb_handle_get (&object_instance_database,
 			      object_handle, (void *)&instance);
 	if (res != 0) {
-		objdb_rdunlock();
+		objdb_unlock();
 		return (res);
 	}
 
@@ -1759,7 +1743,7 @@
 
 	hdb_handle_put (&object_instance_database, object_handle);
 
-	objdb_rdunlock();
+	objdb_unlock();
 	return (res);
 }
 
@@ -1772,18 +1756,18 @@
 
 	main_get_config_modules(&modules, &num_modules);
 
-	objdb_wrlock();
+	objdb_lock();
 
 	for (i=0; i<num_modules; i++) {
 		if (modules[i]->config_writeconfig) {
 			res = modules[i]->config_writeconfig(&objdb_iface, error_string);
 			if (res) {
-				objdb_wrunlock();
+				objdb_unlock();
 				return res;
 			}
 		}
 	}
-	objdb_wrunlock();
+	objdb_unlock();
 	return 0;
 }
 
@@ -1797,19 +1781,19 @@
 	main_get_config_modules(&modules, &num_modules);
 	object_reload_notification(OBJDB_RELOAD_NOTIFY_START, flush);
 
-	objdb_wrlock();
+	objdb_lock();
 
 	for (i=0; i<num_modules; i++) {
 		if (modules[i]->config_reloadconfig) {
 			res = modules[i]->config_reloadconfig(&objdb_iface, flush, error_string);
 			if (res) {
 				object_reload_notification(OBJDB_RELOAD_NOTIFY_FAILED, flush);
-				objdb_wrunlock();
+				objdb_unlock();
 				return res;
 			}
 		}
 	}
-	objdb_wrunlock();
+	objdb_unlock();
 	object_reload_notification(OBJDB_RELOAD_NOTIFY_END, flush);
 	return 0;
 }
