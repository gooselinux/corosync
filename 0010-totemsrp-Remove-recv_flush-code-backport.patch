From a1160a915da1bf3b0076059999160a48f2815663 Mon Sep 17 00:00:00 2001
From: Jan Friesse <jfriesse@redhat.com>
Date: Fri, 15 Apr 2011 16:34:44 +0200
Subject: [PATCH] totemsrp: Remove recv_flush code
 The recv_flush code is no longer necessary because of the miss_count_count
 addition.  It can in some cases lead to register corruption because of
 interactions with -fstack-protector, the recursive nature of how this code
 works, and interactions with the optimizer in some versions of gcc.

Backport of 336741ee96caf3ae435b609ee8a76788902c9edf

Signed-off-by: Steven Dake <sdake@redhat.com>
Reviewed-by: Jan Friesse <jfriesse@redhat.com>
---
 exec/totemiba.c |   10 ----------
 exec/totemnet.c |   14 --------------
 exec/totemnet.h |    2 --
 exec/totemrrp.c |   54 ------------------------------------------------------
 exec/totemrrp.h |    3 ---
 exec/totemsrp.c |    2 --
 exec/totemudp.c |   30 +-----------------------------
 7 files changed, 1 insertions(+), 114 deletions(-)

diff --git a/exec/totemiba.c b/exec/totemiba.c
index a0379ff..ec4ccfc 100644
--- a/exec/totemiba.c
+++ b/exec/totemiba.c
@@ -1329,16 +1329,6 @@ int totemiba_processor_count_set (
 	return (res);
 }
 
-int totemiba_recv_flush (void *iba_context)
-{
-	struct totemiba_instance *instance = (struct totemiba_instance *)iba_context;
-	int res = 0;
-
-	instance = NULL;
-
-	return (res);
-}
-
 int totemiba_send_flush (void *iba_context)
 {
 	struct totemiba_instance *instance = (struct totemiba_instance *)iba_context;
diff --git a/exec/totemnet.c b/exec/totemnet.c
index 5853e66..b5e962c 100644
--- a/exec/totemnet.c
+++ b/exec/totemnet.c
@@ -86,8 +86,6 @@ struct transport {
 		const void *msg,
 		unsigned int msg_len);
 
-	int (*recv_flush) (void *transport_context);
-
 	int (*send_flush) (void *transport_context);
 
 	int (*iface_check) (void *transport_context);
@@ -122,7 +120,6 @@ struct transport transport_entries[] = {
 		.token_send = totemudp_token_send,
 		.mcast_flush_send = totemudp_mcast_flush_send,
 		.mcast_noflush_send = totemudp_mcast_noflush_send,
-		.recv_flush = totemudp_recv_flush,
 		.send_flush = totemudp_send_flush,
 		.iface_check = totemudp_iface_check,
 		.finalize = totemudp_finalize,
@@ -141,7 +138,6 @@ struct transport transport_entries[] = {
 		.token_send = totemiba_token_send,
 		.mcast_flush_send = totemiba_mcast_flush_send,
 		.mcast_noflush_send = totemiba_mcast_noflush_send,
-		.recv_flush = totemiba_recv_flush,
 		.send_flush = totemiba_send_flush,
 		.iface_check = totemiba_iface_check,
 		.finalize = totemiba_finalize,
@@ -284,16 +280,6 @@ int totemnet_processor_count_set (
 	return (res);
 }
 
-int totemnet_recv_flush (void *net_context)
-{
-	struct totemnet_instance *instance = (struct totemnet_instance *)net_context;
-	int res = 0;
-
-	res = instance->transport->recv_flush (instance->transport_context);
-
-	return (res);
-}
-
 int totemnet_send_flush (void *net_context)
 {
 	struct totemnet_instance *instance = (struct totemnet_instance *)net_context;
diff --git a/exec/totemnet.h b/exec/totemnet.h
index 96f063d..67f06c5 100644
--- a/exec/totemnet.h
+++ b/exec/totemnet.h
@@ -88,8 +88,6 @@ extern int totemnet_mcast_noflush_send (
 	const void *msg,
 	unsigned int msg_len);
 
-extern int totemnet_recv_flush (void *net_context);
-
 extern int totemnet_send_flush (void *net_context);
 
 extern int totemnet_iface_check (void *net_context);
diff --git a/exec/totemrrp.c b/exec/totemrrp.c
index 0b80351..1a98e27 100644
--- a/exec/totemrrp.c
+++ b/exec/totemrrp.c
@@ -143,9 +143,6 @@ struct rrp_algo {
 		const void *msg,
 		unsigned int msg_len);
 
-	void (*recv_flush) (
-		struct totemrrp_instance *instance);
-
 	void (*send_flush) (
 		struct totemrrp_instance *instance);
 
@@ -265,9 +262,6 @@ static void none_token_send (
 	const void *msg,
 	unsigned int msg_len);
 
-static void none_recv_flush (
-	struct totemrrp_instance *instance);
-
 static void none_send_flush (
 	struct totemrrp_instance *instance);
 
@@ -326,9 +320,6 @@ static void passive_token_send (
 	const void *msg,
 	unsigned int msg_len);
 
-static void passive_recv_flush (
-	struct totemrrp_instance *instance);
-
 static void passive_send_flush (
 	struct totemrrp_instance *instance);
 
@@ -387,9 +378,6 @@ static void active_token_send (
 	const void *msg,
 	unsigned int msg_len);
 
-static void active_recv_flush (
-	struct totemrrp_instance *instance);
-
 static void active_send_flush (
 	struct totemrrp_instance *instance);
 
@@ -431,7 +419,6 @@ struct rrp_algo none_algo = {
 	.mcast_flush_send	= none_mcast_flush_send,
 	.token_recv		= none_token_recv,
 	.token_send		= none_token_send,
-	.recv_flush		= none_recv_flush,
 	.send_flush		= none_send_flush,
 	.iface_check		= none_iface_check,
 	.processor_count_set	= none_processor_count_set,
@@ -448,7 +435,6 @@ struct rrp_algo passive_algo = {
 	.mcast_flush_send	= passive_mcast_flush_send,
 	.token_recv		= passive_token_recv,
 	.token_send		= passive_token_send,
-	.recv_flush		= passive_recv_flush,
 	.send_flush		= passive_send_flush,
 	.iface_check		= passive_iface_check,
 	.processor_count_set	= passive_processor_count_set,
@@ -465,7 +451,6 @@ struct rrp_algo active_algo = {
 	.mcast_flush_send	= active_mcast_flush_send,
 	.token_recv		= active_token_recv,
 	.token_send		= active_token_send,
-	.recv_flush		= active_recv_flush,
 	.send_flush		= active_send_flush,
 	.iface_check		= active_iface_check,
 	.processor_count_set	= active_processor_count_set,
@@ -549,11 +534,6 @@ static void none_token_send (
 		msg, msg_len);
 }
 
-static void none_recv_flush (struct totemrrp_instance *instance)
-{
-	totemnet_recv_flush (instance->net_handles[0]);
-}
-
 static void none_send_flush (struct totemrrp_instance *instance)
 {
 	totemnet_send_flush (instance->net_handles[0]);
@@ -864,19 +844,6 @@ static void passive_token_send (
 
 }
 
-static void passive_recv_flush (struct totemrrp_instance *instance)
-{
-	struct passive_instance *rrp_algo_instance = (struct passive_instance *)instance->rrp_algo_instance;
-	unsigned int i;
-
-	for (i = 0; i < instance->interface_count; i++) {
-		if (rrp_algo_instance->faulty[i] == 0) {
-
-			totemnet_recv_flush (instance->net_handles[i]);
-		}
-	}
-}
-
 static void passive_send_flush (struct totemrrp_instance *instance)
 {
 	struct passive_instance *rrp_algo_instance = (struct passive_instance *)instance->rrp_algo_instance;
@@ -1238,19 +1205,6 @@ static void active_token_send (
 	}
 }
 
-static void active_recv_flush (struct totemrrp_instance *instance)
-{
-	struct active_instance *rrp_algo_instance = (struct active_instance *)instance->rrp_algo_instance;
-	unsigned int i;
-
-	for (i = 0; i < instance->interface_count; i++) {
-		if (rrp_algo_instance->faulty[i] == 0) {
-
-			totemnet_recv_flush (instance->net_handles[i]);
-		}
-	}
-}
-
 static void active_send_flush (struct totemrrp_instance *instance)
 {
 	struct active_instance *rrp_algo_instance = (struct active_instance *)instance->rrp_algo_instance;
@@ -1581,14 +1535,6 @@ int totemrrp_token_target_set (
 
 	return (0);
 }
-int totemrrp_recv_flush (void *rrp_context)
-{
-	struct totemrrp_instance *instance = (struct totemrrp_instance *)rrp_context;
-
-	instance->rrp_algo->recv_flush (instance);
-
-	return (0);
-}
 
 int totemrrp_send_flush (void *rrp_context)
 {
diff --git a/exec/totemrrp.h b/exec/totemrrp.h
index 5fa0a0f..b631507 100644
--- a/exec/totemrrp.h
+++ b/exec/totemrrp.h
@@ -98,9 +98,6 @@ extern int totemrrp_mcast_flush_send (
 	const void *msg,
 	unsigned int msg_len);
 
-extern int totemrrp_recv_flush (
-	void *rrp_context);
-
 extern int totemrrp_send_flush (
 	void *rrp_context);
 
diff --git a/exec/totemsrp.c b/exec/totemsrp.c
index ae54641..d22231c 100644
--- a/exec/totemsrp.c
+++ b/exec/totemsrp.c
@@ -3411,8 +3411,6 @@ static int message_handler_orf_token (
 	}
 #endif
 
-	totemrrp_recv_flush (instance->totemrrp_context);
-
 	/*
 	 * Determine if we should hold (in reality drop) the token
 	 */
diff --git a/exec/totemudp.c b/exec/totemudp.c
index 23d7efb..c3e43b3 100644
--- a/exec/totemudp.c
+++ b/exec/totemudp.c
@@ -1178,11 +1178,7 @@ static int net_deliver_fn (
 	unsigned char *msg_offset;
 	unsigned int size_delv;
 
-	if (instance->flushing == 1) {
-		iovec = &instance->totemudp_iov_recv_flush;
-	} else {
-		iovec = &instance->totemudp_iov_recv;
-	}
+	iovec = &instance->totemudp_iov_recv;
 
 	/*
 	 * Receive datagram
@@ -1848,30 +1844,6 @@ int totemudp_processor_count_set (
 	return (res);
 }
 
-int totemudp_recv_flush (void *udp_context)
-{
-	struct totemudp_instance *instance = (struct totemudp_instance *)udp_context;
-	struct pollfd ufd;
-	int nfds;
-	int res = 0;
-
-	instance->flushing = 1;
-
-	do {
-		ufd.fd = instance->totemudp_sockets.mcast_recv;
-		ufd.events = POLLIN;
-		nfds = poll (&ufd, 1, 0);
-		if (nfds == 1 && ufd.revents & POLLIN) {
-		net_deliver_fn (0, instance->totemudp_sockets.mcast_recv,
-			ufd.revents, instance);
-		}
-	} while (nfds == 1);
-
-	instance->flushing = 0;
-
-	return (res);
-}
-
 int totemudp_send_flush (void *udp_context)
 {
 	struct totemudp_instance *instance = (struct totemudp_instance *)udp_context;
-- 
1.7.3

